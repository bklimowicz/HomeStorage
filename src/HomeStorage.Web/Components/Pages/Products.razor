@page "/products"
@using System.Text.Json
@using global::HomeStorage.Web.Model
@using HomeStorage.Web.Model.DTOs
@rendermode InteractiveServer
@inject HttpClient _httpClient;

<PageTitle>Products</PageTitle>

<h1>Products</h1> 
<span>
<a href="/products/create" class="btn btn-primary mb-3">Create Product</a>
</span>

@if (_products is null)
{
    <p>Loading products...</p>
}
else if (!_products.Any())
{
    <p>No products found.</p>
}
else
{
    <div class="row row-cols-1 row-cols-md-3 g-4">
    @foreach(var product in _products)
    {
        <div class="card">
            <div class="card-header">
                @product.Name
            </div>
            <div class="card-body">
                <h5 class="card-title">@product.Description</h5>
                @* <p class="card-text">With supporting text below as a natural lead-in to additional content.</p> *@
                <a href="/products/@product.Id/edit" class="btn btn-primary">Edit</a>
            </div>
        </div>
    }
    </div>
}

@code {
    private List<ProductDto>? _products;

    protected override async Task OnInitializedAsync()
    {
        await base.OnInitializedAsync();
        var response = await _httpClient.GetAsync("/products");

        if (response.IsSuccessStatusCode)
        {
            var content = await response.Content.ReadAsStringAsync();
            _products = JsonSerializer.Deserialize<List<ProductDto>>(content) ?? [];
        }
    }
}