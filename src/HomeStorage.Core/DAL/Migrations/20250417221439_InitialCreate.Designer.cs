// <auto-generated />
using System;
using HomeStorage.Core.DAL;
using HomeStorage.Infrastructure.DAL;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace HomeStorage.Infrastructure.DAL.Migrations
{
    [DbContext(typeof(HomeStorageDbContext))]
    [Migration("20250417221439_InitialCreate")]
    partial class InitialCreate
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "9.0.4");

            modelBuilder.Entity("HomeStorage.Domain.Entities.Location", b =>
                {
                    b.Property<string>("LocationName")
                        .HasColumnType("TEXT");

                    b.HasKey("LocationName");

                    b.ToTable("Locations");
                });

            modelBuilder.Entity("HomeStorage.Domain.Entities.Product", b =>
                {
                    b.Property<Guid>("Id")
                        .HasColumnType("TEXT");

                    b.Property<string>("Description")
                        .HasColumnType("TEXT");

                    b.Property<string>("LocationName")
                        .HasColumnType("TEXT");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Producer")
                        .HasColumnType("TEXT");

                    b.Property<decimal>("Quantity")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("LocationName");

                    b.ToTable("Products");
                });

            modelBuilder.Entity("HomeStorage.Domain.Entities.Product", b =>
                {
                    b.HasOne("HomeStorage.Domain.Entities.Location", null)
                        .WithMany("Products")
                        .HasForeignKey("LocationName");
                });

            modelBuilder.Entity("HomeStorage.Domain.Entities.Location", b =>
                {
                    b.Navigation("Products");
                });
#pragma warning restore 612, 618
        }
    }
}
